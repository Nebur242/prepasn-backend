version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.0.0
  node: circleci/node@5.0.2
  aws-ecr: circleci/aws-ecr@8.1.0

main-only: &main-only
  filters:
    branches:
      only: main

# TODO: deploy on tags-only
# tags-only: &tags-only
#   filters:
#     tags:
#       only: /^v.*/

branches-only: &branches-only
  filters:
    branches:
      ignore: main
    tags:
      ignore: /^v.*/

jobs:
  prepare:
    working_directory: ~/prepasn
    executor:
      name: node/default
      tag: '14.19'
    environment:
      PR_BRANCH_NAME: << pipeline.git.branch >>
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Run linter
          command: yarn lint
      - run:
          name: Build affected apps
          command: bash ./scripts/build.sh -b $PR_BRANCH_NAME
      - persist_to_workspace:
          root: ./
          paths:
            - .

  deploy-backend:
    working_directory: ~/prepasn-backend
    executor: aws-cli/default
    resource_class: large
    environment:
      PR_BRANCH_NAME: << pipeline.git.branch >>
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Build and Deploy backend
          command: bash ./scripts/deploy.sh -s backend -b $PR_BRANCH_NAME

  deploy-hls:
    working_directory: ~/prepasn-hls
    executor: aws-cli/default
    resource_class: medium
    environment:
      PR_BRANCH_NAME: << pipeline.git.branch >>
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Build and Deploy hls
          command: bash ./scripts/deploy.sh -s hls -b $PR_BRANCH_NAME

  deploy-backend-dry-run:
    working_directory: ~/prepasn-backend
    executor: aws-cli/default
    resource_class: medium
    environment:
      PR_BRANCH_NAME: << pipeline.git.branch >>
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Build backend
          command: bash ./scripts/deploy.sh -s backend -b $PR_BRANCH_NAME -d

  build-and-push-hls-ecr-image:
    executor: aws-ecr/default
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Build hls service
          command: yarn nx run hls:build:serverless
      - aws-ecr/build-and-push-image:
          checkout: false
          create-repo: true
          extra-build-args: --compress
          dockerfile: apps/hls/Dockerfile
          repo: $FFMPEG_IMAGE_REPO_NAME
          tag: latest

  deploy-hls-dry-run:
    working_directory: ~/prepasn-hls
    executor: aws-cli/default
    resource_class: medium
    environment:
      PR_BRANCH_NAME: << pipeline.git.branch >>
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Build hls
          command: bash ./scripts/deploy.sh -s hls -b $PR_BRANCH_NAME -d

workflows:
  deploy-affected-apps:
    jobs:
      - prepare
      - deploy-backend-dry-run:
          requires:
            - prepare
          <<: [*branches-only]
      - deploy-backend:
          requires:
            - prepare
          <<: [*main-only]
      - build-and-push-hls-ecr-image:
          requires:
            - prepare
      - deploy-hls-dry-run:
          requires:
            - build-and-push-hls-ecr-image
          <<: [*branches-only]
      - deploy-hls:
          requires:
            - build-and-push-hls-ecr-image
          <<: [*main-only]
      # - deploy-frontend:
      #     <<: [*requires-prepare, *main-only]
